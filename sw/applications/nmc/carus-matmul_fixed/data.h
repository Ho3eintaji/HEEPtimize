#ifndef DATA_H_
#define DATA_H_

#include <stdint.h>

// Macros
// ------
#define ARG0 8 // kernel argument 0: rows of A
#define ARG1 8 // kernel argument 1: columns of A
#define VL 8 // vector length: columns of B
#define Q 12 // vnumber of decimal bits in the fixed point format
#define ELEM_SIZE 2 // element size in bytes
#define data_t int16_t // element data type
#define data_t_double int32_t // element data type for double width

// Input matrix size
#define A_SIZE 128
#define A_ROWS 8
#define A_COLS 8
#define B_SIZE 128
#define B_ROWS 8
#define B_COLS 8

// Output matrix size
#define R_SIZE 128
#define R_ROWS 8
#define R_COLS 8

// Input matrices
// --------------
int16_t A [] = {
    0x0000, 0xe000, 0x1000, 0xd000, 0xe000, 0xf000, 0xe000, 0x0000,
    0x2000, 0x0000, 0xf000, 0x1000, 0xd000, 0x0000, 0x0000, 0xd000,
    0x1000, 0xd000, 0x0000, 0x2000, 0x2000, 0x0000, 0x1000, 0x1000,
    0xe000, 0xd000, 0x0000, 0x1000, 0xf000, 0x0000, 0xe000, 0x1000,
    0x2000, 0x0000, 0xe000, 0x0000, 0x2000, 0xf000, 0x0000, 0x2000,
    0xf000, 0xf000, 0x0000, 0x2000, 0xf000, 0xe000, 0x0000, 0x2000,
    0xf000, 0xd000, 0x1000, 0xe000, 0xe000, 0x0000, 0xd000, 0x1000,
    0x1000, 0x2000, 0x2000, 0x0000, 0xf000, 0x0000, 0xf000, 0x0000
};

int16_t B [] = {
    0xe000, 0xd000, 0xf000, 0xd000, 0xf000, 0xe000, 0x2000, 0xe000,
    0xd000, 0x2000, 0x0000, 0x2000, 0x2000, 0xe000, 0x2000, 0x0000,
    0xe000, 0xf000, 0x1000, 0xf000, 0x0000, 0x0000, 0x2000, 0xd000,
    0xe000, 0x2000, 0x1000, 0xd000, 0x2000, 0x2000, 0xd000, 0xd000,
    0xd000, 0x1000, 0xf000, 0x1000, 0xd000, 0xf000, 0xf000, 0xd000,
    0xf000, 0x2000, 0x2000, 0xf000, 0x2000, 0x1000, 0x0000, 0xf000,
    0xd000, 0xd000, 0xe000, 0x1000, 0xe000, 0xf000, 0x0000, 0x0000,
    0x1000, 0xe000, 0x2000, 0x2000, 0x0000, 0x2000, 0xf000, 0xd000
};

// Output matrices
// ---------------
int16_t R [] = {
    0x7000, 0x7000, 0x2000, 0x1000, 0xe000, 0x1000, 0x9000, 0xd000,
    0x2000, 0x0000, 0xb000, 0xf000, 0x9000, 0xb000, 0x5000, 0xe000,
    0xb000, 0x8000, 0xf000, 0x6000, 0x5000, 0x7000, 0x3000, 0xf000,
    0x5000, 0x5000, 0xa000, 0xc000, 0x5000, 0x1000, 0x3000, 0x1000,
    0xd000, 0x8000, 0xc000, 0x3000, 0x6000, 0xd000, 0xc000, 0x7000,
    0x8000, 0xc000, 0x4000, 0x0000, 0x2000, 0xb000, 0x5000, 0xb000,
    0xd000, 0xd000, 0xa000, 0xf000, 0x3000, 0xb000, 0x1000, 0x8000,
    0xa000, 0x1000, 0x4000, 0xd000, 0x8000, 0xc000, 0xb000, 0xb000
};

#endif // DATA_H_
