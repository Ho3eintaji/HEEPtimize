#ifndef _CONV_CGRA_IM2C_OC_H_
#define _CONV_CGRA_IM2C_OC_H_

#include <stdint.h>
#include <stdint.h>
#include "kernels_common/kernels_common.h"
#include "data.h"

#define IN_VAR_DEPTH_IM2C_OC    8
#define OUT_VAR_DEPTH_IM2C_OC    4


static void         config_im2c_oc();
// static void         loading_buffer(int out_row, int out_col);

static int32_t cgra_input_im2c_oc[CGRA_N_COLS][IN_VAR_DEPTH_IM2C_OC]     __attribute__ ((aligned (4)));
static int32_t cgra_output_im2c_oc[CGRA_N_COLS][OUT_VAR_DEPTH_IM2C_OC]   __attribute__ ((aligned (4)));

const uint32_t cgra_imem_conv_im2c_oc[CGRA_IMEM_SIZE] = {0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x8b80000, 0x0, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x8a0d0004, 0xab80004, 0x1a100001, 0x10880006, 0x90b00000, 0x0, 0x500d0000, 0x0, 0xc80000, 0xc80000, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x8b80000, 0x0, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x8a0d0004, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x500d0000, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0xa0080001, 0x1ac00008, 0xa0080090, 0x1ac00004, 0x6bb0000, 0x8b80000, 0x0, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x8a0d0004, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x500d0000, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x8b80000, 0x0, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x8a0d0004, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x500d0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x40080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x4ac00004, 0x90b00000, 0x80080000, 0x0, 0x50880004, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x40080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x80080000, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x40080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x80080000, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x40080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x80080000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x0, 0x50080000, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0xab80008, 0x1a100001, 0x1ac00008, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x0, 0x50080000, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x0, 0x50080000, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x0, 0x50080000, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x50080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x50080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x50080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa90000, 0xad0000, 0x0, 0x0, 0x0, 0x0, 0x6bb0000, 0x0, 0x50080000, 0x0, 0x17180000, 0x190f0000, 0x6a090004, 0x0, 0x0, 0x0, 0x0, 0x90b00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
const uint32_t cgra_kmem_conv_im2c_oc[CGRA_KMEM_SIZE] = {0x0, 0xf016, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};

kcom_kernel_t conv_im2c_oc_kernel = {
    .kmem   = cgra_kmem_conv_im2c_oc,
    .imem   = cgra_imem_conv_im2c_oc,
    .col_n  = CGRA_N_COLS,
    .in_n   = IN_VAR_DEPTH_IM2C_OC,
    .out_n  = OUT_VAR_DEPTH_IM2C_OC,
    .input  = cgra_input_im2c_oc,
    .output = cgra_output_im2c_oc,
    .config = config_im2c_oc,
    .name   = "conv_im2c_oc",
};

void config_im2c_oc()
{
    for(int i = 0; i < 4; i++){
        cgra_input_im2c_oc[0][i] = &(filter[(4*i)][0][0][0]);
        cgra_input_im2c_oc[1][i] = &(filter[(4*i)+1][0][0][0]);
        cgra_input_im2c_oc[2][i] = &(filter[(4*i)+2][0][0][0]);
        cgra_input_im2c_oc[3][i] = &(filter[(4*i)+3][0][0][0]);
    }

    for(int i = 4; i < 8; i++){
        cgra_input_im2c_oc[0][i] = &(input[0]);
        cgra_input_im2c_oc[1][i] = &(input[0]);
        cgra_input_im2c_oc[2][i] = &(input[0]);
        cgra_input_im2c_oc[3][i] = &(input[0]);
    }
}


#endif // _CONV_CGRA_IM2C_OC_H_