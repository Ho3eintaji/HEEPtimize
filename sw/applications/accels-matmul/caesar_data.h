#ifndef CAESAR_DATA_H_
#define CAESAR_DATA_H_

#include <stdint.h>

// Macros
// ------
#define EXPECTED_OUTPUT_AVAILABLE 1 // golden result available
#define DATA_WIDTH 32 // element data width
#define CAESAR_A_OFFS 16384 // input A address offset
#define CAESAR_B_OFFS 0 // input B address offset
#define CAESAR_R_OFFS 256 // output R address offset
#define data_t int32_t // element data type

// // Input matrix size
// #define INPUT_A_SIZE 256
// #define INPUT_A_ROWS 8
// #define INPUT_A_COLS 8
// #define INPUT_B_SIZE 256
// #define INPUT_B_ROWS 8
// #define INPUT_B_COLS 8

// // Output matrix size
// #define OUTPUT_R_SIZE 256
// #define OUTPUT_R_ROWS 8
// #define OUTPUT_R_COLS 8

// // Input matrices
// // --------------
// int32_t input_A [] = {
//     0x00000000, 0x00000005, 0x00000004, 0x00000005, 0x00000002, 0x00000008, 0x00000002, 0x00000001,
//     0x00000006, 0x00000003, 0x00000008, 0x00000005, 0x00000001, 0x00000000, 0x00000009, 0x00000008,
//     0x00000005, 0x00000003, 0x00000006, 0x00000000, 0x00000008, 0x00000005, 0x00000008, 0x00000001,
//     0x00000005, 0x00000005, 0x00000000, 0x00000000, 0x00000000, 0x00000002, 0x00000007, 0x00000002,
//     0x00000008, 0x00000009, 0x00000003, 0x00000003, 0x00000007, 0x00000005, 0x00000002, 0x00000001,
//     0x00000005, 0x00000003, 0x00000009, 0x00000003, 0x00000007, 0x00000005, 0x00000008, 0x00000000,
//     0x00000009, 0x00000006, 0x00000007, 0x00000003, 0x00000000, 0x00000000, 0x00000005, 0x00000009,
//     0x00000009, 0x00000002, 0x00000007, 0x00000001, 0x00000006, 0x00000009, 0x00000000, 0x00000002
// };

// int32_t input_B [] = {
//     0x00000003, 0x00000002, 0x00000003, 0x00000004, 0x00000008, 0x00000002, 0x00000005, 0x00000007,
//     0x00000005, 0x00000005, 0x00000009, 0x00000006, 0x00000003, 0x00000008, 0x00000002, 0x00000009,
//     0x00000007, 0x00000009, 0x00000002, 0x00000004, 0x00000004, 0x00000001, 0x00000007, 0x00000008,
//     0x00000005, 0x00000005, 0x00000006, 0x00000004, 0x00000006, 0x00000009, 0x00000001, 0x00000003,
//     0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000005, 0x00000004, 0x00000009, 0x00000005,
//     0x00000006, 0x00000000, 0x00000006, 0x00000004, 0x00000001, 0x00000004, 0x00000007, 0x00000002,
//     0x00000005, 0x00000001, 0x00000008, 0x00000003, 0x00000004, 0x00000000, 0x00000009, 0x00000009,
//     0x00000000, 0x00000001, 0x00000008, 0x00000006, 0x00000006, 0x00000003, 0x00000008, 0x00000006
// };

// // Output matrices
// // ---------------
// int32_t output_R [] = {
//     0x00000088, 0x0000005b, 0x0000009b, 0x00000070, 0x0000005d, 0x00000084, 0x0000008f, 0x0000008e,
//     0x0000009f, 0x0000008e, 0x000000e3, 0x000000aa, 0x000000d0, 0x00000075, 0x000000fb, 0x0000011a,
//     0x0000008e, 0x00000060, 0x0000009c, 0x00000078, 0x0000009c, 0x0000005f, 0x00000104, 0x000000ee,
//     0x00000057, 0x0000002c, 0x00000090, 0x0000005b, 0x00000061, 0x00000040, 0x00000080, 0x0000009f,
//     0x00000091, 0x00000071, 0x000000b7, 0x00000095, 0x000000af, 0x000000a9, 0x000000ce, 0x000000ef,
//     0x000000b2, 0x00000088, 0x000000ac, 0x00000089, 0x000000af, 0x00000076, 0x0000010b, 0x00000104,
//     0x00000092, 0x0000008c, 0x000000e1, 0x000000b5, 0x000000d2, 0x0000007f, 0x000000e2, 0x00000119,
//     0x00000091, 0x00000068, 0x00000087, 0x00000086, 0x000000a3, 0x00000074, 0x000000e8, 0x000000c8
// };

#endif // CAESAR_DATA_H_
